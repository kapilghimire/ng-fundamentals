Bootstraping of angular app
 starts at main.ts file
 main property of angular.json points to main.ts
 main proerty of angular.json is used by webpack
 main.ts bootstarp AppModule
 AppModule bootstarp appcomponent

 Declearing component with inline template
  import { Component } from '@angular/core';

  @Component({
    selector: 'events-app',
    template: '<h2>Hello World</h2>',
  })
  export class EventsAppComponent {
    title = 'ng-fundamentals';
  }

where does angular serve static files from
  files under  src/assest  can be served as static files
  even if file is in deep folder herarchy inside src/assest it will be serverd
  eg src/assest/images/abc.png will also be served

where to keep static images
  src/assests or any deep level of src/assest

angular.json proerty which bundles static assests (relative to index.html) and css
"assets": [
              "src/favicon.ico",
              "src/assets"
            ],
"styles": [
              "src/styles.css"
            ],

angular.json to add external js or css library
  "styles": [
              "node_modules/ngf-bootstrap/dist/bootstrap.min.css",
              "src/styles.css"
            ],
 "scripts": [
              "node_modules/jquery/dist/jquery.min.js",
              "node_modules/bootstrap/dist/js/bootstrap.js"
            ]



restart angular compiler when
change in webpack or angular.json

@NgModule json arguments and prperty
@NgModule({
  declarations: [
    EventsAppComponent,
    EventListComponent
  ],
  imports: [
    BrowserModule
  ],
  providers: [],
  bootstrap: [EventsAppComponent]
})



Registering new component to a module at NgModule

@NgModule({
  declarations: [
    EventsAppComponent,
    EventListComponent   // registering component
  ],

string interpolation in angular
one way binding
 <h2>{{event.name}}</h2>


 Using external html file for component html
 @Component({
   selector:'events-list',
   templateUrl:'./events-list.component.html'
})
